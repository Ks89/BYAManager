// Generated by delombok at Sat Sep 17 15:11:19 CEST 2016
/*
Copyright 2011-2015 Stefano Cappa

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package it.stefanocappa.gui.image;

import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 * Classe che carica le immagini e le imposta in modo da ottenerle in modo statico.
 */
public final class ImageLoader {
	private static ImageLoader instance = new ImageLoader();
	private boolean errore;
	private BufferedImage sfondo;
	private BufferedImage toolBar;
	private BufferedImage pulsanteNormale;
	private BufferedImage pulsanteOver;
	private BufferedImage pulsanteCliccato;
	private BufferedImage pulsanteDonazione;
	private BufferedImage iconaBya;
	private BufferedImage frecciaComboBox;
	private BufferedImage frecciaComboBoxSu;
	private BufferedImage frecciaComboBoxGiu;
	private BufferedImage logoGenericoVerde;
	private BufferedImage logoGenericoNero;
	private BufferedImage refreshDb;
	private BufferedImage refreshByam;
	private BufferedImage preferenze;
	private BufferedImage pause;
	private BufferedImage play;
	private BufferedImage remove;
	private BufferedImage pausaAll;
	private BufferedImage playAll;
	private BufferedImage removeAll;
	private BufferedImage refreshDbD;
	private BufferedImage refreshByamD;
	private BufferedImage preferenzeD;
	private BufferedImage pauseD;
	private BufferedImage playD;
	private BufferedImage removeD;
	private BufferedImage pausaAllD;
	private BufferedImage playAllD;
	private BufferedImage removeAllD;
	private BufferedImage logoItunes9;
	private BufferedImage logoItunes10;
	private BufferedImage logoFirmware;
	private BufferedImage tableComplete;
	private BufferedImage tablePause;
	private BufferedImage tableValidation;
	private BufferedImage tableMerging;
	private BufferedImage tableDownloading;
	private BufferedImage tableError;

	/**
	 * Costruttore privato che legge le immagini e in caso contrario
	 * segnala l'errore con una variabile boolean, ottenibile staticamente con
	 * isErrore().
	 */
	private ImageLoader() {
		errore = false;
		try {
			sfondo = ImageIO.read(this.getClass().getResource("/sfondoFrame.png"));
			toolBar = ImageIO.read(this.getClass().getResource("/toolBar.png"));
			pulsanteNormale = ImageIO.read(this.getClass().getResource("/buttonNormale.png"));
			pulsanteOver = ImageIO.read(this.getClass().getResource("/buttonOver.png"));
			pulsanteCliccato = ImageIO.read(this.getClass().getResource("/buttonPremuto.png"));
			pulsanteDonazione = ImageIO.read(this.getClass().getResource("/donazione.png"));
			iconaBya = ImageIO.read(this.getClass().getResource("/byamanager_icona.png"));
			logoGenericoVerde = ImageIO.read(this.getClass().getResource("/logo_generico.png"));
			logoGenericoNero = ImageIO.read(this.getClass().getResource("/logo_generico_S.png"));
			refreshDb = ImageIO.read(this.getClass().getResource("/refresh_db.png"));
			refreshByam = ImageIO.read(this.getClass().getResource("/refresh_byam.png"));
			preferenze = ImageIO.read(this.getClass().getResource("/preferenze.png"));
			pause = ImageIO.read(this.getClass().getResource("/pausa.png"));
			play = ImageIO.read(this.getClass().getResource("/play.png"));
			remove = ImageIO.read(this.getClass().getResource("/delete.png"));
			pausaAll = ImageIO.read(this.getClass().getResource("/pausa_all.png"));
			playAll = ImageIO.read(this.getClass().getResource("/play_all.png"));
			removeAll = ImageIO.read(this.getClass().getResource("/delete_all.png"));
			refreshDbD = ImageIO.read(this.getClass().getResource("/refresh_db_D.png"));
			refreshByamD = ImageIO.read(this.getClass().getResource("/refresh_byam_D.png"));
			preferenzeD = ImageIO.read(this.getClass().getResource("/preferenze_D.png"));
			pauseD = ImageIO.read(this.getClass().getResource("/pausa_D.png"));
			playD = ImageIO.read(this.getClass().getResource("/play_D.png"));
			removeD = ImageIO.read(this.getClass().getResource("/delete_D.png"));
			pausaAllD = ImageIO.read(this.getClass().getResource("/pausa_all_D.png"));
			playAllD = ImageIO.read(this.getClass().getResource("/play_all_D.png"));
			removeAllD = ImageIO.read(this.getClass().getResource("/delete_all_D.png"));
			frecciaComboBox = ImageIO.read(this.getClass().getResource("/frecciaComboBox.png"));
			frecciaComboBoxSu = ImageIO.read(this.getClass().getResource("/frecciaComboBox-UP.png"));
			frecciaComboBoxGiu = ImageIO.read(this.getClass().getResource("/frecciaComboBox-DOWN.png"));
			logoItunes9 = ImageIO.read(this.getClass().getResource("/itunes9.png"));
			logoItunes10 = ImageIO.read(this.getClass().getResource("/itunes10.png"));
			logoFirmware = ImageIO.read(this.getClass().getResource("/tabella_ipsw.png"));
			tableComplete = ImageIO.read(this.getClass().getResource("/tabella_complete.png"));
			tablePause = ImageIO.read(this.getClass().getResource("/tabella_pause.png"));
			tableValidation = ImageIO.read(this.getClass().getResource("/tabella_validation.png"));
			tableMerging = ImageIO.read(this.getClass().getResource("/tabella_merging.png"));
			tableDownloading = ImageIO.read(this.getClass().getResource("/tabella_download.png"));
			tableError = ImageIO.read(this.getClass().getResource("/tabella_error.png"));
		} catch (IOException e) {
			errore = true;
		}
	}

	/**
	 * Metodo che permette di ottenere l'istanza della classe.
	 * @return istanza della classe Immagini.
	 */
	public static ImageLoader getInstance() {
		return instance;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isErrore() {
		return this.errore;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getSfondo() {
		return this.sfondo;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getToolBar() {
		return this.toolBar;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPulsanteNormale() {
		return this.pulsanteNormale;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPulsanteOver() {
		return this.pulsanteOver;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPulsanteCliccato() {
		return this.pulsanteCliccato;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPulsanteDonazione() {
		return this.pulsanteDonazione;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getIconaBya() {
		return this.iconaBya;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getFrecciaComboBox() {
		return this.frecciaComboBox;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getFrecciaComboBoxSu() {
		return this.frecciaComboBoxSu;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getFrecciaComboBoxGiu() {
		return this.frecciaComboBoxGiu;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getLogoGenericoVerde() {
		return this.logoGenericoVerde;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getLogoGenericoNero() {
		return this.logoGenericoNero;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRefreshDb() {
		return this.refreshDb;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRefreshByam() {
		return this.refreshByam;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPreferenze() {
		return this.preferenze;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPause() {
		return this.pause;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPlay() {
		return this.play;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRemove() {
		return this.remove;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPausaAll() {
		return this.pausaAll;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPlayAll() {
		return this.playAll;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRemoveAll() {
		return this.removeAll;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRefreshDbD() {
		return this.refreshDbD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRefreshByamD() {
		return this.refreshByamD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPreferenzeD() {
		return this.preferenzeD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPauseD() {
		return this.pauseD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPlayD() {
		return this.playD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRemoveD() {
		return this.removeD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPausaAllD() {
		return this.pausaAllD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getPlayAllD() {
		return this.playAllD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getRemoveAllD() {
		return this.removeAllD;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getLogoItunes9() {
		return this.logoItunes9;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getLogoItunes10() {
		return this.logoItunes10;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getLogoFirmware() {
		return this.logoFirmware;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTableComplete() {
		return this.tableComplete;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTablePause() {
		return this.tablePause;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTableValidation() {
		return this.tableValidation;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTableMerging() {
		return this.tableMerging;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTableDownloading() {
		return this.tableDownloading;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BufferedImage getTableError() {
		return this.tableError;
	}
}
